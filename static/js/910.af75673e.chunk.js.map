{"version":3,"file":"static/js/910.af75673e.chunk.js","mappings":"0PAKaA,EAAa,WACxB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAoB,SAAAC,GACA,SAApBA,EAAIC,OAAOV,MACbC,EAAQQ,EAAIC,OAAOC,OAEG,aAApBF,EAAIC,OAAOV,MACbG,EAAYM,EAAIC,OAAOC,OAED,UAApBF,EAAIC,OAAOV,MACbK,EAASI,EAAIC,OAAOC,MAEvB,EAcKC,EAAQ,WACZX,EAAQ,IACRE,EAAY,IACZE,EAAS,GACV,EAED,OACE,kBAAMQ,UAAWC,EAAAA,EAAAA,KAAUC,SAnBR,SAAAN,GACnBA,EAAIO,iBAEJ,IAAMC,EAAO,CACXjB,KAAAA,EACAI,MAAAA,EACAF,SAAAA,GAEFI,GAASY,EAAAA,EAAAA,IAASD,IAClBL,GACD,EASC,WACE,8BACE,iBAAMC,UAAWC,EAAAA,EAAAA,KAAjB,mBACA,kBACED,UAAWC,EAAAA,EAAAA,MACXH,MAAOX,EACPmB,KAAK,OACLnB,KAAK,OACLoB,UAAW,EACXC,UAAW,GACXC,UAAQ,EACRC,SAAUf,QAGd,8BACE,iBAAMK,UAAWC,EAAAA,EAAAA,KAAjB,oBACA,kBACED,UAAWC,EAAAA,EAAAA,MACXH,MAAOP,EACPe,KAAK,QACLnB,KAAK,QACLsB,UAAQ,EACRC,SAAUf,QAGd,8BACE,iBAAMK,UAAWC,EAAAA,EAAAA,KAAjB,uBACA,kBACED,UAAWC,EAAAA,EAAAA,MACXH,MAAOT,EACPiB,KAAK,WACLnB,KAAK,WACLoB,UAAW,EACXC,UAAW,GACXC,UAAQ,EACRC,SAAUf,QAGd,mBAAQK,UAAWC,EAAAA,EAAAA,OAAYK,KAAK,SAApC,sBAKL,ECpFc,SAASK,IACtB,OACE,+BACE,8BACE,4BACE,eACEC,MAAO,CACLC,QAAS,QAFb,uCAOA,SAAC5B,EAAD,UAKT,C,qBClBD,KAAgB,KAAO,oBAAoB,KAAO,oBAAoB,MAAQ,qBAAqB,OAAS,sB","sources":["components/Forms/signUpForm.jsx","pages/SignUpPage.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Forms/forms.module.css?7efc"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operationsAuth';\nimport css from '../Forms/forms.module.css';\n\nexport const SignUpForm = () => {\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleInputChange = evt => {\n    if (evt.target.name === 'name') {\n      setName(evt.target.value);\n    }\n    if (evt.target.name === 'password') {\n      setPassword(evt.target.value);\n    }\n    if (evt.target.name === 'email') {\n      setEmail(evt.target.value);\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const user = {\n      name,\n      email,\n      password,\n    };\n    dispatch(register(user));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setPassword('');\n    setEmail('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label>\n        <span className={css.span}>Name</span>\n        <input\n          className={css.input}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          minLength={2}\n          maxLength={15}\n          required\n          onChange={handleInputChange}\n        />\n      </label>\n      <label>\n        <span className={css.span}>Email</span>\n        <input\n          className={css.input}\n          value={email}\n          type=\"email\"\n          name=\"email\"\n          required\n          onChange={handleInputChange}\n        />\n      </label>\n      <label>\n        <span className={css.span}>Password</span>\n        <input\n          className={css.input}\n          value={password}\n          type=\"password\"\n          name=\"password\"\n          minLength={7}\n          maxLength={10}\n          required\n          onChange={handleInputChange}\n        />\n      </label>\n      <button className={css.button} type=\"submit\">\n        SignUp\n      </button>\n    </form>\n  );\n};\n","import { SignUpForm } from 'components/Forms/signUpForm';\n\nexport default function SignUpPage() {\n  return (\n    <>\n      <section>\n        <div>\n          <h4\n            style={{\n              padding: '10px',\n            }}\n          >\n            You have to registration\n          </h4>\n          <SignUpForm />\n        </div>\n      </section>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"forms_form__alMry\",\"span\":\"forms_span__q1WS9\",\"input\":\"forms_input__x6MIh\",\"button\":\"forms_button__BToio\"};"],"names":["SignUpForm","useState","name","setName","password","setPassword","email","setEmail","dispatch","useDispatch","handleInputChange","evt","target","value","reset","className","css","onSubmit","preventDefault","user","register","type","minLength","maxLength","required","onChange","SignUpPage","style","padding"],"sourceRoot":""}