{"version":3,"file":"static/js/297.36aeb7df.chunk.js","mappings":"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","sources":["redux/contacts/selectors.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","webpack://goit-react-hw-08-phonebook/./src/components/ContactRender/ContactRender.module.css?731c","components/ContactRender/ContactRender.jsx","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/FormAddContacts/FormAddContacts.module.css?70a8","components/FormAddContacts/FormAddContacts.jsx","pages/ContactPage.jsx","HOC/WithAuthRedirect.jsx"],"sourcesContent":["export const selectItems = state => state.contactsData.contacts.items;\nexport const selectIsLoading = state => state.contactsData.contacts.isLoading;\nexport const selectError = state => state.contactsData.contacts.error;\nexport const selectFilter = state => state.contactsData.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"labelName\":\"Filter_labelName__JvZcc\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/contactSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport css from '../Filter/Filter.module.css';\n\nexport function Filter() {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = evt => {\n    dispatch(setFilter(evt.target.value));\n  };\n\n  return (\n    <div>\n      <label>\n        <span className={css.labelName}>Find contact by name</span>\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={handleFilter}\n        ></input>\n      </label>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\"};","// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"ContactRender_contact__T9xbp\",\"textContact\":\"ContactRender_textContact__rEmu4\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport css from '../ContactRender/ContactRender.module.css';\nimport { removeContact } from 'redux/contacts/operations/removeContact';\n\nexport function Contact({ contact }) {\n  const dispatch = useDispatch();\n  const onDeleteContact = () => dispatch(removeContact(contact.id));\n  return (\n    <li className={css.contact}>\n      <div>\n        {contact.name} : {contact.number}\n      </div>\n      <button\n        className={css.textContact}\n        type=\"button\"\n        onClick={onDeleteContact}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }),\n};\n","import css from '../ContactList/ContactList.module.css';\nimport { Contact } from '../ContactRender/ContactRender.jsx';\nimport { useSelector } from 'react-redux';\n\nimport { selectItems, selectFilter } from 'redux/contacts/selectors';\n\nexport function ContactList() {\n  const contacts = useSelector(selectItems);\n\n  const filter = useSelector(selectFilter);\n\n  const filteredContacts = contacts.filter(contact => {\n    return contact.name.toLowerCase().trim().includes(filter.toLowerCase());\n  });\n\n  if (filteredContacts.length === 0) {\n    return;\n  }\n  return (\n    <ul className={css.contactList}>\n      {filteredContacts.map(contact => {\n        return <Contact contact={contact} key={contact.id} />;\n      })}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"formEl\":\"FormAddContacts_formEl__t-DDP\",\"inputEl\":\"FormAddContacts_inputEl__8ZN6s\",\"labelName\":\"FormAddContacts_labelName__B2uvX\",\"labelTel\":\"FormAddContacts_labelTel__Lb2Mx\",\"btn\":\"FormAddContacts_btn__cjW3o\"};","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations/addContact ';\n\nimport { selectItems } from 'redux/contacts/selectors';\nimport css from '../FormAddContacts/FormAddContacts.module.css';\n\nexport const FormAddContacts = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectItems);\n\n  const dispatch = useDispatch();\n\n  const handleInputChange = evt => {\n    if (evt.target.name === 'name') {\n      setName(evt.target.value);\n    }\n    if (evt.target.name === 'number') {\n      setNumber(evt.target.value);\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const contact = {\n      name,\n      number,\n    };\n\n    if (\n      contacts.some(el => {\n        return el.name.toLowerCase() === contact.name.toLowerCase();\n      })\n    ) {\n      alert('!!!');\n      return;\n    }\n\n    dispatch(addContact(contact));\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.formEl} onSubmit={handleSubmit}>\n      <label>\n        <span className={css.labelName}>Name</span>\n        <input\n          className={css.inputEl}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleInputChange}\n        />\n      </label>\n      <label>\n        <span className={css.labelTel}>Number</span>\n        <input\n          className={css.inputEl}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleInputChange}\n        />\n      </label>\n      <button className={css.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","import { Filter } from '../components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { FormAddContacts } from '../components/FormAddContacts/FormAddContacts';\nimport { fetchContacts } from 'redux/contacts/operations/fetchContacts ';\nimport { useSelector } from 'react-redux';\nimport { selectItems } from 'redux/contacts/selectors';\nimport WithAuthRedirect from 'HOC/WithAuthRedirect';\n\nfunction ContactPage() {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectItems);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <div\n      style={{\n        border: '2px solid #4b193e',\n        padding: '40px',\n\n        display: 'flex',\n        justifyContent: 'center',\n\n        color: '#4b193e',\n        flexDirection: 'column',\n      }}\n    >\n      <h1\n        style={{\n          color: '#3a3639',\n          textShadow: '-5px -3px 5px #B23479',\n        }}\n      >\n        My Phonebook\n      </h1>\n      <FormAddContacts />\n      <h2>Contacts</h2>\n      {contacts.length ? (\n        <>\n          <Filter />\n          <ContactList />\n        </>\n      ) : (\n        <p>Контактів немає</p>\n      )}\n    </div>\n  );\n}\n\nexport default WithAuthRedirect(ContactPage, '/login');\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { selectIsLoggedIn } from 'redux/auth/selectorsAuth';\n\nexport default function WithAuthRedirect(Component, navigateTo) {\n  const ComponentWithRedirect = props => {\n    const isLoggedIn = useSelector(selectIsLoggedIn);\n    return isLoggedIn ? <Component {...props} /> : <Navigate to={navigateTo} />;\n  };\n  return ComponentWithRedirect;\n}\n"],"names":["selectItems","state","contactsData","contacts","items","selectFilter","filter","Filter","useSelector","dispatch","useDispatch","className","css","type","name","value","onChange","evt","setFilter","target","Contact","contact","number","onClick","removeContact","id","ContactList","filteredContacts","toLowerCase","trim","includes","length","map","FormAddContacts","useState","setName","setNumber","handleInputChange","reset","onSubmit","preventDefault","some","el","alert","addContact","pattern","title","required","Component","navigateTo","useEffect","fetchContacts","style","border","padding","display","justifyContent","color","flexDirection","textShadow","props","selectIsLoggedIn","to"],"sourceRoot":""}